<!--
    SAPUI5의 미리 정의된 유형이 충분히 유연하지 않고 뷰에서 간단한 계산 또는 서식 지정을 수행하려는 경우가 있습니다. 
    이때 표현식이 정말 유용합니다. 데이터 모델의 현재 숫자에 따라 가격 형식을 지정하는 데 사용합니다.

    가격은 이제 번호에 따라 형식이 지정됩니다.
-->
<mvc:View
    controllerName="sap.ui.demo.walkthrough.controller.InvoiceList"
    xmlns="sap.m"
    xmlns:mvc="sap.ui.core.mvc"
>
    <List
        headerText="{i18n>invoiceListTitle}"
        class="sapUiResponsiveMargin"
        width="auto"
        items="{invoice>/Invoices}"
    >
        <items>
            <ObjectListItem
                title="{invoice>Quantity} x {invoice>ProductName}"
                number="{
                    parts: [{path: 'invoice>ExtendedPrice'}, {path: 'view>/currency'}],
                    type: 'sap.ui.model.type.Currency',
                    formatOptions: {
                        showMeasure: false
                    }
                }"
                numberUnit="{view>/currency}"
                numberState="{= ${invoice>ExtendedPrice} > 50 ? 'Error' : 'Success'}"
            />
        </items>
    </List>
</mvc:View>

<!--
    ObjectListItem 컨트롤에 number 및 numberUnit 속성을 추가하여 뷰의 송장 목록(InvoiceList)에 가격을 추가한 다음 
    바인딩 구문의 type 속성을 sap.ui.model.type으로 설정하여 숫자에 통화 데이터 유형을 적용합니다. .통화.

    위에서 볼 수 있듯이 ObjectListItem의 number 속성에 대해 특수한 바인딩 구문을 사용하고 있습니다. 
    이 바인딩 구문은 다른 모델의 여러 속성을 컨트롤의 단일 속성에 바인딩할 수 있는 소위 "Calculated Fields"를 사용합니다. 
    다른 모델에서 바인딩된 속성을 "parts"이라고 합니다. 
    위의 예에서 컨트롤의 속성은 숫자이고 서로 다른 두 모델에서 검색된 바운드 속성("parts")은 invoice>ExtendedPrice 및 view>/currency입니다.

    우리는 가격을 유로로 표시하려고 하며 일반적으로 통화는 백엔드에서 데이터 모델의 일부입니다. 
    우리의 경우에는 그렇지 않으므로 앱에서 직접 정의해야 합니다. 따라서 송장 목록에 대한 컨트롤러를 추가하고 
    바인딩 구문의 두 번째 부분으로 통화 속성을 사용합니다. 
    통화 유형은 통화 코드를 기반으로 가격 형식을 처리합니다. 
    우리의 경우 가격은 소수점 이하 2자리로 표시됩니다.

    또한 형식 지정 옵션 showMeasure를 false로 설정했습니다. 
    이것은 별도의 속성 numberUnit으로 ObjectListItem 컨트롤에 전달되기 때문에 속성 번호에서 통화 코드를 숨깁니다.
    
-->

<!--
    선언적 보기에 속성 numberState를 추가하고 대괄호 안에 =로 시작하는 새로운 바인딩 구문을 도입합니다. 
    이 기호는 새 바인딩 구문을 시작하는 데 사용되며 표현식이라고 하며 여기에 표시된 삼항 연산자와 같은 간단한 계산 논리를 수행할 수 있습니다.

    연산자의 조건은 데이터 모델의 값입니다.
    식 바인딩 내부의 모델 바인딩은 코드에서 볼 수 있듯이 $ 기호로 이스케이프되어야 합니다. 
    가격이 50보다 높으면 상태를 '오류'(숫자가 빨간색으로 표시됨)로 설정하고 그렇지 않으면 '성공'(숫자가 녹색으로 표시됨)으로 설정합니다.

    표현식은 수학 표현식, 비교 등과 같은 데이터 형식을 지정하는 데 도움이 되는 특정 연산 세트로 제한됩니다.
    설명서에서 가능한 작업을 조회할 수 있습니다.

    사소한 계산에만 표현식 바인딩을 사용하십시오.

-->