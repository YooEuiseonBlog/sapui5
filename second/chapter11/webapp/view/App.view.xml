<!--
    입력 필드와 버튼을 모두 sap.m.Page라는 컨트롤 안에 넣습니다. 
    이 페이지는 콘텐츠라고 하는 0..N개의 다른 컨트롤에 대한 집계를 제공합니다. 
    또한 콘텐츠 상단의 헤더 섹션에 제목 속성을 표시합니다. 
    Page 자체는 다음과 같은 중요한 작업을 수행하는 sap.m.App이라는 다른 컨트롤의 페이지 집계에 배치됩니다.

    모바일 장치에서 제대로 표시하는 데 필요한 여러 속성을 index.html의 헤더에 씁니다.

    애니메이션이 있는 페이지 사이를 탐색하는 기능을 제공합니다. 우리는 이것을 곧 사용할 것입니다.

    view의 전체 화면 높이가 제대로 작동하도록 하기 위해 값이 true인 displayBlock 속성을 view에 추가합니다. 
    실제 콘텐츠는 관련 콘텐츠를 그룹화하기 위해 Panel 컨트롤 안에 래핑됩니다.

-->
<mvc:View
    controllerName="sap.ui.demo.walkthrough.controller.App"
    xmlns="sap.m"
    xmlns:mvc="sap.ui.core.mvc"
    displayBlock="true"
>
    <App>
        <pages>
            <Page title="{i18n>homePageTitle}">
                <content>
                    <Panel headerText="{i18n>helloPanelTitle}">
                        <content>
                            <Button
                            text="{i18n>showHelloButtonText}"
                            press=".onShowHello"/>
                            <Input
                                value="{/recipient/name}"
                                description="Hello {/recipient/name}"
                                valueLiveUpdate="true"
                                width="60%"/>
                        </content>
                    </Panel>
                </content>
            </Page>
        </pages>
    </App>
</mvc:View>