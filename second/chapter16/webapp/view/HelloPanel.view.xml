<!--
    프래그먼트는 재사용할 수 있지만 컨트롤러가 없는 경량 UI 부분(UI 하위 트리)입니다.
    즉, UI의 특정 부분을 여러 보기에서 재사용할 수 있도록 정의하거나 
    특정 상황(다른 사용자 역할, 편집 모드 대 읽기 전용 모드)에서 view의 일부를 서로 교환하려는 경우를 의미합니다.
    ), 프래그먼트는 특히 추가 컨트롤러 로직이 필요하지 않은 경우 좋은 후보입니다.


    프래그먼트는 1~n개의 컨트롤로 구성될 수 있습니다. 
    런타임에 뷰에 배치된 프래그먼트는 "일반" 뷰 콘텐츠와 유사하게 동작합니다. 
    즉, 프래그먼트 내부의 컨트롤은 렌더링될 때 뷰의 DOM에 포함됩니다. 
    물론 보기의 일부가 되도록 설계되지 않은 컨트롤(예: 대화 상자)이 있습니다.


    그러나 이러한 컨트롤의 경우에도 프래그먼트가 특히 유용할 수 있습니다. 잠시 후에 살펴보겠습니다.

    이제 앱에 대화 상자를 추가합니다.
    대화 상자는 일반 앱 콘텐츠 위에서 열리므로 특정 보기에 속하지 않기 때문에 특별합니다. 
    즉, 대화 상자는 컨트롤러 코드의 어딘가에서 인스턴스화되어야 하지만 
    선언적 접근 방식을 고수하고 가능한 한 유연하게 재사용 가능한 아티팩트를 만들고 싶고 
    대화 상자를 보기로 지정할 수 없기 때문에 다음을 포함하는 XML 조각을 만들 것입니다. 
    대화 상자. 결국 대화는 앱의 둘 이상의 보기에서 사용될 수 있습니다.

    새로운 "Say Hello With Dialog" 버튼을 클릭하면 대화상자가 열립니다.

-->
<mvc:View
    controllerName="sap.ui.demo.walkthrough.controller.HelloPanel"
    xmlns="sap.m"
    xmlns:mvc="sap.ui.core.mvc"
>
    <Panel
        headerText="{i18n>helloPanelTitle}"
        class="sapUiResponsiveMargin"
        width="auto"
    >
        <content>
            <Button
                id="helloDialogButton"
                text="{i18n>openDialogButtonText}"
                press=".onOpenDialog"
                class="sapUiSmallMarginEnd"
            />
            <Button
                text="{i18n>showHelloButtonText}"
                press=".onShowHello"
                class="myCustomButton"
            />
            <Input
                value="{/recipient/name}"
                valueLiveUpdate="true"
                width="60%"
            />
            <FormattedText
                htmlText="Hello {/recipient/name}"
                class="sapUiSmallMargin sapThemeHighlight-asColor myCustomText"
            />
        </content>
    </Panel>
</mvc:View>

<!--
    대화 상자를 열기 위해 뷰에 새 버튼을 추가합니다. 
    단순히 패널의 콘텐츠 보기 컨트롤러에서 이벤트 처리기 함수를 호출합니다.
    28단계: OPA와의 통합 테스트에서 새 id="helloDialogButton"이 필요합니다.

    쉽게 식별할 수 있도록 앱의 키 컨트롤에 helloWorldButton과 같은 고유 ID를 설정하는 것이 좋습니다.
    속성 `id`가 지정되지 않은 경우 OpenUI5 런타임은 컨트롤에 대해 고유하지만 변화하는 ID(예: `__button23`)를 생성합니다.
    차이점을 확인하려면 브라우저에서 앱의 DOM 요소를 검사하세요.
-->