<!--
    우리의 앱 콘텐츠는 여전히 레터박스의 모서리에 붙어 있습니다. 레이아웃을 미세 조정하기 위해 이전 단계에서 추가한 컨트롤에 여백과 패딩을 추가할 수 있습니다.

    컨트롤에 CSS를 수동으로 추가하는 대신 SAPUI5에서 제공하는 표준 클래스를 사용합니다. 
    이러한 클래스는 일관된 크기 조정 단계, 왼쪽에서 오른쪽으로 지원 및 응답성을 처리합니다.

    이제 패널의 레이아웃과 해당 콘텐츠에 여백과 패딩이 있습니다.
-->
<mvc:View
    controllerName="sap.ui.demo.walkthrough.controller.App"
    xmlns="sap.m"
    xmlns:mvc="sap.ui.core.mvc"
    displayBlock="true"
>
<Shell>
    <App class="myAppDemoWT">
        <pages>
            <Page title="{i18n>homePageTitle}">
                <Panel 
                    headerText="{i18n>helloPanelTitle}"
                    class="sapUiResponsiveMargin"
                    width="auto"
                >
                    <content>
                        <Button
                        text="{i18n>showHelloButtonText}"
                        press=".onShowHello"
                        class="MyCustomButton"/>
                        <Input
                            value="{/recipient/name}"
                            valueLiveUpdate="true"
                            width="60%"/>
                        <FormattedText 
                            htmlText="Hello {/recipient/name}" 
                            class="sapUiSmallMargin sapThemeHighlight-asColor myCustomText"/>
                    </content>
                </Panel>
            </Page>
        </pages>
    </App>
</Shell>
</mvc:View>


<!-- 
    셸 컨트롤은 이제 우리 앱의 가장 바깥쪽 컨트롤이며 화면 크기가 특정 너비보다 큰 경우 소위 레터박스를 자동으로 표시합니다.
    이미 구성 요소 UI 주변에 셸이 있는 SAP Fiori 실행 패드와 같은 외부 셸에서 앱이 실행되는 경우
    XML 보기의 선언적 UI 정의에 셸 컨트롤을 추가하지 않습니다.

    사용자 지정 배경 이미지 또는 색상 설정 및 사용자 지정 로고 설정과 같이 셸을 사용자 지정하는 추가 옵션이 있습니다.
    자세한 내용은 관련 API 참조를 확인하세요.
-->

<!-- 
    패널을 배치하기 위해 패널 주위에 약간의 공간을 추가할 CSS 클래스 sapUiResponsiveMargin을 추가합니다.
    그렇지 않으면 여백이 기본 너비인 100%에 추가되고 페이지 크기를 초과하므로 패널의 너비를 자동으로 설정해야 합니다.

    화면 크기를 줄이면 실제로 여백도 줄어드는 것을 볼 수 있습니다. 
    이름에서 알 수 있듯이 여백은 장치의 화면 크기에 반응하고 적응합니다. 
    태블릿은 더 작은 여백을 갖게 되며 세로 모드의 휴대폰은 이러한 작은 화면에서 공간을 절약하기 위해 여백을 얻지 못합니다.

    여백은 모든 종류의 컨트롤에 추가할 수 있으며 다양한 옵션에서 사용할 수 있습니다. 
    버튼에 sapUiSmallMarginEnd 클래스를 추가하여 버튼과 입력 필드 사이에 공간을 추가할 수도 있습니다.


    출력 텍스트의 형식을 개별적으로 지정하려면 입력 필드에서 설명을 제거하고 동일한 값을 가진 새 텍스트 컨트롤을 추가합니다. 
    여기에서도 작은 여백을 사용하여 다른 콘텐츠와 정렬합니다. 
    마찬가지로 표준 패딩 클래스를 추가하여 패널과 같은 컨테이너 컨트롤의 내부 부분을 레이아웃할 수 있지만 
    이미 기본적으로 패딩을 가져오므로 여기서는 필요하지 않습니다.

    가능한 경우 레이아웃에 표준 SAPUI5 CSS 클래스를 사용하십시오.
-->